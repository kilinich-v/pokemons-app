{"version":3,"sources":["components/PokemonsList/styles.module.scss","components/ListView/styles.module.scss","components/Pagination/styles.module.scss","components/SearchBar/styles.module.scss","components/PokemonModal/styles.module.scss","redux/pokemons/actions.js","redux/pokemons/operations.js","redux/pokemons/reducer.js","redux/pokemons/selectors.js","components/SearchBar/SearchBar.jsx","components/FilterPokemons/FilterPokemons.jsx","components/ListView/ListView.jsx","components/Pagination/Pagination.jsx","components/PokemonsList/PokemonsList.jsx","components/PokemonModal/PokemonModal.jsx","views/PokemonsFindView.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","getListRequest","createAction","getListSuccess","getListError","getListFromTypesRequest","getListFromTypesSuccess","getListFromTypesError","getItemRequest","getItemSuccess","getItemError","getTypesRequest","getTypesSuccess","getTypesError","removePokemon","removePokemonsFromTypes","clearErrors","getPokemons","limit","offset","dispatch","a","axios","get","res","data","message","getPokemon","url","pokemons","createReducer","_","payload","pokemonsFromTypes","pokemon","types","results","error","loadPokemonsList","loadPokemon","pokemonsReducer","combineReducers","state","count","SearchBar","useDispatch","useState","inputValue","setInputValue","className","styles","container","searchForm","onSubmit","event","name","preventDefault","toLowerCase","input","type","value","autoComplete","autoFocus","placeholder","onChange","target","disabled","button","FilterPokemons","currentType","setCurrentType","useSelector","pokemonSelectors","useEffect","e","map","onClick","ListView","currentView","setCurrentView","viewWrapper","style","backgroundImage","process","view","active","Pagination","handlePage","perPage","pageCount","setPageCount","currentPage","setCurrentPage","total","Math","ceil","length","forcePage","previousLabel","nextLabel","onPageChange","console","log","selected","containerClassName","pagination","previousLinkClassName","prevBtn","nextLinkClassName","nextBtn","disabledClassName","activeClassName","eventListener","PokemonsList","page","setPage","printPokemons","list","formatName","toUpperCase","slice","item","printPokemonsFromType","index","spinnerWrapper","color","PokemonModal","isOpen","setOpen","imageLoading","setImageLoading","modalWrapper","pokemonWrapper","close","baseInfo","imageWrapper","src","sprites","front_default","alt","avatar","onLoad","blockWrapper","stats","blockTitle","listItem","base_stat","stat","moves","move","backDrop","PokemonsFindView","App","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7020b94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2-K2N\",\"list\":\"styles_list__aWx8J\",\"viewTile\":\"styles_viewTile__3DY-c\",\"item\":\"styles_item__1hk-1\",\"viewList\":\"styles_viewList__2bl6I\",\"name\":\"styles_name__1ClpS\",\"spinnerWrapper\":\"styles_spinnerWrapper__18-l_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewWrapper\":\"styles_viewWrapper__wm3ou\",\"view\":\"styles_view__3Ljuy\",\"active\":\"styles_active__23oG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"styles_pagination__XTV33\",\"active\":\"styles_active__LfUod\",\"disabled\":\"styles_disabled__ozVHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3cRKv\",\"searchForm\":\"styles_searchForm__3P8rV\",\"input\":\"styles_input__1TLoe\",\"button\":\"styles_button__3F1yt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWrapper\":\"styles_modalWrapper__bRE8u\",\"backDrop\":\"styles_backDrop__ptWl6\",\"container\":\"styles_container__J34dr\",\"close\":\"styles_close__1WOWg\",\"pokemonWrapper\":\"styles_pokemonWrapper__2thja\",\"baseInfo\":\"styles_baseInfo__13v36\",\"name\":\"styles_name__3NjCw\",\"imageWrapper\":\"styles_imageWrapper__2Qlqi\",\"stats\":\"styles_stats__9-xTW\",\"moves\":\"styles_moves__2oSl1\",\"listItem\":\"styles_listItem__3tzpX\",\"blockTitle\":\"styles_blockTitle__3X5Ue\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getListRequest = createAction('pokemon/getListRequest');\r\nexport const getListSuccess = createAction('pokemon/getListSuccess');\r\nexport const getListError = createAction('pokemon/getListError');\r\n\r\nexport const getListFromTypesRequest = createAction(\r\n  'pokemon/getListFromTypesRequest'\r\n);\r\nexport const getListFromTypesSuccess = createAction(\r\n  'pokemon/getListFromTypesSuccess'\r\n);\r\nexport const getListFromTypesError = createAction(\r\n  'pokemon/getListFromTypesError'\r\n);\r\n\r\nexport const getItemRequest = createAction('pokemon/getItemRequest');\r\nexport const getItemSuccess = createAction('pokemon/getItemSuccess');\r\nexport const getItemError = createAction('pokemon/getItemError');\r\n\r\nexport const getTypesRequest = createAction('pokemon/getTypesRequest');\r\nexport const getTypesSuccess = createAction('pokemon/getTypesSuccess');\r\nexport const getTypesError = createAction('pokemon/getTypesError');\r\n\r\nexport const removePokemon = createAction('pokemon/removePokemon');\r\nexport const removePokemonsFromTypes = createAction(\r\n  'pokemon/removePokemonsFromTypes'\r\n);\r\nexport const clearErrors = createAction('pokemon/clearErrors');\r\n","import axios from 'axios';\r\nimport {\r\n  getListRequest,\r\n  getListSuccess,\r\n  getListError,\r\n  getListFromTypesRequest,\r\n  getListFromTypesSuccess,\r\n  getListFromTypesError,\r\n  getItemRequest,\r\n  getItemSuccess,\r\n  getItemError,\r\n  getTypesRequest,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n  clearErrors\r\n} from './actions';\r\n\r\nexport const getPokemons =\r\n  (limit = 20, offset = 20) =>\r\n  async dispatch => {\r\n    dispatch(clearErrors());\r\n    dispatch(getListRequest());\r\n\r\n    try {\r\n      const res = await axios.get(\r\n        `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`\r\n      );\r\n\r\n      dispatch(getListSuccess(res.data));\r\n    } catch (error) {\r\n      dispatch(getListError(error.message));\r\n    }\r\n  };\r\n\r\nexport const getPokemonsFromType = url => async dispatch => {\r\n  dispatch(clearErrors());\r\n  dispatch(getListFromTypesRequest());\r\n\r\n  try {\r\n    const res = await axios.get(url);\r\n    dispatch(getListFromTypesSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(getListFromTypesError(error.message));\r\n  }\r\n};\r\n\r\nexport const findPokemon = name => async dispatch => {\r\n  dispatch(clearErrors());\r\n  dispatch(getItemRequest());\r\n\r\n  try {\r\n    const res = await axios.get(`https://pokeapi.co/api/v2/pokemon/${name}`);\r\n\r\n    dispatch(getItemSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(getItemError(error.message));\r\n  }\r\n};\r\n\r\nexport const getPokemon = url => async dispatch => {\r\n  dispatch(clearErrors());\r\n  dispatch(getItemRequest());\r\n\r\n  try {\r\n    const res = await axios.get(url);\r\n    dispatch(getItemSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(getItemError(error.message));\r\n  }\r\n};\r\n\r\nexport const getTypes = () => async dispatch => {\r\n  dispatch(clearErrors());\r\n  dispatch(getTypesRequest());\r\n\r\n  try {\r\n    const res = await axios.get('https://pokeapi.co/api/v2/type');\r\n    dispatch(getTypesSuccess(res.data));\r\n  } catch (error) {\r\n    dispatch(getTypesError(error.message));\r\n  }\r\n};\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  getListRequest,\r\n  getListSuccess,\r\n  getListError,\r\n  getListFromTypesRequest,\r\n  getListFromTypesSuccess,\r\n  getListFromTypesError,\r\n  getItemRequest,\r\n  getItemSuccess,\r\n  getItemError,\r\n  getTypesSuccess,\r\n  getTypesError,\r\n  removePokemon,\r\n  removePokemonsFromTypes,\r\n  clearErrors\r\n} from './actions';\r\n\r\nconst pokemons = createReducer([], {\r\n  [getListSuccess]: (_, { payload }) => payload\r\n});\r\n\r\nconst pokemonsFromTypes = createReducer(null, {\r\n  [getListFromTypesSuccess]: (_, { payload }) => payload.pokemon,\r\n  [removePokemonsFromTypes]: () => null\r\n});\r\n\r\nconst pokemon = createReducer(null, {\r\n  [getItemSuccess]: (_, { payload }) => payload,\r\n  [removePokemon]: () => null\r\n});\r\n\r\nconst types = createReducer(null, {\r\n  [getTypesSuccess]: (_, { payload }) => payload.results\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [getListError]: (_, { payload }) => payload,\r\n  [getListFromTypesError]: (_, { payload }) => payload,\r\n  [getItemError]: (_, { payload }) => payload,\r\n  [getTypesError]: (_, { payload }) => payload,\r\n  [clearErrors]: () => null\r\n});\r\n\r\nconst loadPokemonsList = createReducer(false, {\r\n  [getListRequest]: () => true,\r\n  [getListSuccess]: () => false,\r\n  [getListError]: () => false,\r\n  [getListFromTypesRequest]: () => true,\r\n  [getListFromTypesSuccess]: () => false,\r\n  [getListFromTypesError]: () => false\r\n});\r\n\r\nconst loadPokemon = createReducer(false, {\r\n  [getItemRequest]: () => true,\r\n  [getItemSuccess]: () => false,\r\n  [getItemError]: () => false\r\n});\r\n\r\nexport const pokemonsReducer = combineReducers({\r\n  pokemons,\r\n  pokemonsFromTypes,\r\n  pokemon,\r\n  types,\r\n  error,\r\n  loadPokemonsList,\r\n  loadPokemon\r\n});\r\n","const getPokemons = state => state.pokemons.results;\r\nconst getPokemonsFromTypes = state => state.pokemonsFromTypes;\r\nconst getPokemonCount = state => state.pokemons.count;\r\n\r\nconst getPokemon = state => state.pokemon;\r\n\r\nconst getTypes = state => state.types;\r\n\r\nconst loadPokemonsList = state => state.loadPokemonsList;\r\nconst loadPokemon = state => state.loadPokemon;\r\n\r\nconst error = state => state.error;\r\n\r\nexport default {\r\n  getPokemons,\r\n  getPokemonsFromTypes,\r\n  getPokemonCount,\r\n  getPokemon,\r\n  getTypes,\r\n  loadPokemonsList,\r\n  loadPokemon,\r\n  error\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { findPokemon } from '../../redux/pokemons';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst SearchBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInput = event => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    dispatch(findPokemon(inputValue.toLowerCase()));\r\n    setInputValue('');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\r\n        <input\r\n          className={styles.input}\r\n          type='text'\r\n          value={inputValue}\r\n          autoComplete='off'\r\n          autoFocus\r\n          placeholder='Type pokemon name...'\r\n          onChange={handleInput}\r\n        />\r\n        <button disabled={!inputValue} type='submit' className={styles.button}>\r\n          Find\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  getPokemons,\r\n  getTypes,\r\n  pokemonSelectors,\r\n  getPokemonsFromType,\r\n  removePokemonsFromTypes\r\n} from '../../redux/pokemons';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst FilterPokemons = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentType, setCurrentType] = useState(null);\r\n\r\n  const types = useSelector(pokemonSelectors.getTypes);\r\n\r\n  const handleReset = () => {\r\n    dispatch(getPokemons());\r\n    dispatch(removePokemonsFromTypes());\r\n    setCurrentType(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getTypes());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentType) {\r\n      dispatch(getPokemonsFromType(currentType));\r\n    }\r\n  }, [currentType]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Pokemon types</p>\r\n      <select\r\n        value={currentType ? currentType : 'Choose type'}\r\n        onChange={e => setCurrentType(e.target.value)}>\r\n        <option value=''>Choose type</option>\r\n        {types?.map(({ name, url }) => (\r\n          <option value={url} key={name}>\r\n            {name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleReset} type='button'>\r\n        Reset types\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPokemons;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.module.scss';\r\n\r\nconst ListView = ({ currentView, setCurrentView }) => {\r\n  return (\r\n    <div className={styles.viewWrapper}>\r\n      <div\r\n        onClick={() => setCurrentView('viewTile')}\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/svg/view_1.svg)`\r\n        }}\r\n        className={\r\n          currentView === 'viewTile'\r\n            ? `${styles.view} ${styles.active}`\r\n            : `${styles.view}`\r\n        }></div>\r\n      <div\r\n        onClick={() => setCurrentView('viewList')}\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL}/images/svg/view_2.svg)`\r\n        }}\r\n        className={\r\n          currentView === 'viewList'\r\n            ? `${styles.view} ${styles.active}`\r\n            : `${styles.view}`\r\n        }></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n\r\nListView.propTypes = {\r\n  currentView: PropTypes.string,\r\n  setCurrentView: PropTypes.func\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport { getPokemons, pokemonSelectors } from '../../redux/pokemons';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Pagination = ({ handlePage, perPage }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [pageCount, setPageCount] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const total = useSelector(pokemonSelectors.getPokemonCount);\r\n  const pokemonsFromTypes = useSelector(pokemonSelectors.getPokemonsFromTypes);\r\n\r\n  const changePage = e => {\r\n    console.log(e);\r\n    setCurrentPage(e.selected + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPageCount(Math.ceil(total / perPage));\r\n  }, [total, pokemonsFromTypes]);\r\n\r\n  useEffect(() => {\r\n    if (pokemonsFromTypes) {\r\n      setPageCount(Math.ceil(pokemonsFromTypes.length / perPage));\r\n    }\r\n\r\n    setCurrentPage(1);\r\n  }, [pokemonsFromTypes]);\r\n\r\n  useEffect(() => {\r\n    if (!pokemonsFromTypes) {\r\n      dispatch(getPokemons(perPage, currentPage * perPage));\r\n    }\r\n\r\n    handlePage(currentPage);\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div>\r\n      <ReactPaginate\r\n        forcePage={currentPage - 1}\r\n        previousLabel={'Previous'}\r\n        nextLabel={'Next'}\r\n        pageCount={pageCount}\r\n        onPageChange={changePage}\r\n        containerClassName={styles.pagination}\r\n        previousLinkClassName={styles.prevBtn}\r\n        nextLinkClassName={styles.nextBtn}\r\n        disabledClassName={styles.disabled}\r\n        activeClassName={styles.active}\r\n        eventListener={'onClick'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\nPagination.propTypes = {\r\n  handlePage: PropTypes.func,\r\n  perPage: PropTypes.number\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\n\r\nimport {\r\n  pokemonSelectors,\r\n  getPokemon,\r\n  getPokemons\r\n} from '../../redux/pokemons';\r\n\r\nimport FilterPokemons from '../FilterPokemons/FilterPokemons';\r\nimport ListView from '../ListView';\r\nimport Pagination from '../Pagination';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst ITEMS_PER_PAGE = 20;\r\n\r\nconst PokemonsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentView, setCurrentView] = useState('viewList');\r\n  const [page, setPage] = useState(null);\r\n\r\n  const pokemons = useSelector(pokemonSelectors.getPokemons);\r\n  const pokemonsFromTypes = useSelector(pokemonSelectors.getPokemonsFromTypes);\r\n  const loadPokemonsList = useSelector(pokemonSelectors.loadPokemonsList);\r\n  const error = useSelector(pokemonSelectors.error);\r\n\r\n  const handlePage = page => {\r\n    setPage(page);\r\n  };\r\n\r\n  const printPokemons = (\r\n    <ul className={`${styles.list} ${styles[currentView]}`}>\r\n      {pokemons?.map(({ name, url }) => {\r\n        const formatName = name[0].toUpperCase() + name.slice(1);\r\n\r\n        return (\r\n          <div\r\n            className={styles.item}\r\n            onClick={() => dispatch(getPokemon(url))}\r\n            key={name}>\r\n            <p className={styles.name}>{formatName}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  const printPokemonsFromType = (\r\n    <ul className={`${styles.list} ${styles[currentView]}`}>\r\n      {pokemonsFromTypes?.map(({ pokemon: { name, url } }, index) => {\r\n        const formatName = name[0].toUpperCase() + name.slice(1);\r\n\r\n        if (\r\n          index < ITEMS_PER_PAGE * page &&\r\n          index > ITEMS_PER_PAGE * (page - 1)\r\n        ) {\r\n          return (\r\n            <div\r\n              className={styles.item}\r\n              onClick={() => dispatch(getPokemon(url))}\r\n              key={name}>\r\n              <p className={styles.name}>{formatName}</p>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <FilterPokemons />\r\n      <ListView currentView={currentView} setCurrentView={setCurrentView} />\r\n      {error && <p>{error}</p>}\r\n      <Pagination handlePage={handlePage} perPage={ITEMS_PER_PAGE} />\r\n      {loadPokemonsList ? (\r\n        <div className={styles.spinnerWrapper}>\r\n          <PulseLoader color={'#f6ac29'} />\r\n        </div>\r\n      ) : pokemonsFromTypes ? (\r\n        printPokemonsFromType\r\n      ) : (\r\n        printPokemons\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\n\r\nimport { pokemonSelectors, removePokemon } from '../../redux/pokemons';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst PokemonModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setOpen] = useState(false);\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n\r\n  const pokemon = useSelector(pokemonSelectors.getPokemon);\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(removePokemon());\r\n    setOpen(false);\r\n    setImageLoading(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, [pokemon]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && pokemon && (\r\n        <div className={styles.modalWrapper}>\r\n          <div className={styles.container}>\r\n            <div className={styles.pokemonWrapper}>\r\n              <div className={styles.close} onClick={handleCloseModal}>\r\n                x\r\n              </div>\r\n              <div className={styles.baseInfo}>\r\n                <div className={styles.imageWrapper}>\r\n                  {imageLoading && <PulseLoader color={'#f6ac29'} />}\r\n                  <img\r\n                    src={pokemon.sprites.front_default}\r\n                    alt={`${pokemon.name}'s avatar`}\r\n                    className={styles.avatar}\r\n                    onLoad={() => setImageLoading(false)}\r\n                  />\r\n                </div>\r\n                <p className={styles.name}>{pokemon.name}</p>\r\n              </div>\r\n              <div className={`${styles.blockWrapper} ${styles.stats}`}>\r\n                <p className={styles.blockTitle}>stats</p>\r\n                <ul className={styles.listItem}>\r\n                  {pokemon.stats.map(({ base_stat, stat }) => (\r\n                    <li key={stat.name}>\r\n                      <span>{stat.name}</span> - {base_stat}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <div className={`${styles.blockWrapper} ${styles.moves}`}>\r\n                <p className={styles.blockTitle}>moves</p>\r\n                <ul className={styles.listItem}>\r\n                  {pokemon.moves.map(({ move }) => (\r\n                    <li key={move.name}>{move.name}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={styles.backDrop}></div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonModal;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport SearchBar from '../components/SearchBar';\r\nimport PokemonsList from '../components/PokemonsList';\r\nimport PokemonModal from '../components/PokemonModal';\r\n\r\nexport const PokemonsFindView = () => {\r\n  return (\r\n    <div>\r\n      <SearchBar />\r\n      <PokemonsList />\r\n      <PokemonModal />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport { PokemonsFindView } from './views';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <PokemonsFindView />\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { pokemonsReducer } from './pokemons';\r\n\r\nconst store = createStore(\r\n  pokemonsReducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}